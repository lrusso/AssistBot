<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<title>ChatBot | Demo</title>
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="stylesheet" href="ChatBot.css" type="text/css">
	</head>
	<body style="background-color:grey;">
		<div class="botui-app-container" id="ChatBot">
			<div class="botui-title" onclick="minimize()"><span class="botui-titlename" id="botui-titlename"></span><div class="botui-closeicon" id="botui-closeicon"></div></div>
			<div class="botui-scroller" id="botui-scroller">
				<bot-ui></bot-ui>
			</div>
		</div>
		<script src="ChatBot.min.js"></script>
		<script>

			var homeBot = BotUI("ChatBot");

			var userLanguage = window.navigator.userLanguage || window.navigator.language;

			var textTitle = "";
			var textWelcome = "";
			var textMakeReservation = "";
			var textCheckReservation = "";
			var textInputDate = "";
			var textInputDateWho = "";
			var textVacancy = "";
			var textNoVacancy = "";
			var textRoomSimple = "";
			var textRoomDouble = "";
			var textHowManyDays = "";
			var textDaysPlaceHolder = "";
			var textInputName = "";
			var textInputNameRetry = "";
			var textInputNamePlaceHolder = "";
			var textInputEmail = "";
			var textInputEmailRetry = "";
			var textInputEmailPlaceHolder = "";
			var textReservationMade = "";
			var textNoReservationMade = "";
			var textThankYou = "";
			var textError = "";

			var reservationDate = "";
			var reservationRoomType = "";
			var reservationDays = "";
			var reservationName = "";
			var reservationEmail = "";

			if (userLanguage.substring(0,2)=="es")
				{
				textTitle = "Asistente virtual";
				textWelcome = "Hola, soy la asistente virtual del Hotel Ejemplo. &iquest;Qu&eacute; puedo hacer por usted?";
				textMakeReservation = "Reservar";
				textCheckReservation = "Consultar reserva";
				textInputDate = "Seleccione una fecha y presione ENTER.";
				textInputDateWho = "&iquest;A nombre de qui&eacute;n hizo la reserva?";
				textVacancy = "Hay disponibilidad en esa fecha. &iquest;Qu&eacute; tipo de habitaci&oacute;n desea?";
				textNoVacancy = "No hay disponibilidad en esa fecha. Por favor seleccione otra.";
				textRoomSimple = "Simple";
				textRoomDouble = "Matrimonial";
				textHowManyDays = "&iquest;Cuantos d&iacute;as desea quedarse?";
				textDaysPlaceHolder = "- ingrese cantidad de d" + String.fromCharCode(237) +  "as aqu" + String.fromCharCode(237) +  " -";
				textInputName = "&iquest;Cu&aacute;l es su nombre completo?";
				textInputNameRetry = "Por favor, ingrese un nombre v&aacute;lido.";
				textInputNamePlaceHolder = "- escriba su nombre completo aqu" + String.fromCharCode(237) +  " -";
				textInputEmail = "&iquest;Cu&aacute;l es su correo?";
				textInputEmailRetry = "Por favor, ingrese un correo v&aacute;lido.";
				textInputEmailPlaceHolder = "- escriba su correo aqu" + String.fromCharCode(237) +  " -";
				textReservationMade = " tiene reservada una habitaci&oacute;n matrimonial del 3 al 13 de Mayo. &iquest;Qu&eacute; m&aacute;s puedo hacer por usted?";
				textNoReservationMade = " no tiene reservada ninguna habitaci&oacute;n. &iquest;Qu&eacute; m&aacute;s puedo hacer por usted?";
				textThankYou = "Su reserva se ha realizado. Muchas gracias.";
				textError = "Error al realizar la reserva. Por favor vuelva a intentarlo en otro momento.";
				}
				else
				{
				textTitle = "Virtual assistant";
				textWelcome = "Hello, I'm the virtual assistant at the Example Hotel. What can I do for you?";
				textMakeReservation = "Reservartion";
				textCheckReservation = "Check reservation";
				textInputDate = "Select a date and press ENTER.";
				textInputDateWho = "Under what name the reservation was made?";
				textVacancy = "There is vacancy in that date. What kind of room would you like?";
				textNoVacancy = "There is no vacancy in the selected date. Please select another one.";
				textRoomSimple = "Simple";
				textRoomDouble = "Double";
				textHowManyDays = "How many days are you going to stay?";
				textDaysPlaceHolder = "- write how manys days -";
				textInputName = "What is your name?";
				textInputNameRetry = "Please, input a valid name.";
				textInputNamePlaceHolder = "- write your name here -";
				textInputEmail = "What is your email?";
				textInputEmailRetry = "Please, input a valid email.";
				textInputEmailPlaceHolder = "- write your email here -";
				textReservationMade = " has a double room reserved from 3th May until 13th May. What else can I do for you?";
				textNoReservationMade = " hasn't any room reserved. What else can I do for you?";
				textThankYou = "You reservation was made. Thank you.";
				textError = "Error while making the reservation. Please try again later.";
				}

			document.getElementById("botui-titlename").innerHTML = textTitle;

			function ChatBot_Step_1_Welcome(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					return homeBot.action.button(
						{
						delay: 1000,
						action: [
									{text: textMakeReservation, value: "make"},
									{text: textCheckReservation, value: "check"},
								]
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.text});

					if(res.value=="make")
						{
						ChatBot_Step_2_Date(textInputDate);
						}
						else
						{
						ChatBot_Step_10_CheckingReservation(textInputDateWho);
						}
					});
				}

			function ChatBot_Step_2_Date(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					return homeBot.action.text(
						{
						delay: 800,
						action: {value: "", sub_type: "date"}
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.value});

					var reservationDate = res.value;

					var vacancy = true;

					// IF THERE IS ANY VACANCY
					if (vacancy == true)
						{
						ChatBot_Step_3_RoomType(textVacancy);
						}
						else
						{
						ChatBot_Step_2_Date(textNoVacancy);
						}
					});
				}

			function ChatBot_Step_3_RoomType(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					return homeBot.action.button(
						{
						delay: 1000,
						action: [
									{text: textRoomSimple, value: "simple"},
									{text: textRoomDouble, value: "double"},
								]
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.text});

					reservationRoomType = res.value;

					ChatBot_Step_5_Days(textHowManyDays);
					});
				}

			function ChatBot_Step_5_Days(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					return homeBot.action.text(
						{
						delay: 800,
						action: {value: "", sub_type: "number", placeholder: textDaysPlaceHolder}
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.value});

					reservationDays = res.value;

					ChatBot_Step_6_Name(textInputName);
					});
				}

			function ChatBot_Step_6_Name(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					return homeBot.action.text(
						{
						delay: 800,
						action: {value: "", placeholder: textInputNamePlaceHolder}
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.value});

					if (res.value.trim()=="")
						{
						ChatBot_Step_6_Name(textInputNameRetry);
						}
						else
						{
						reservationName = res.value;
						ChatBot_Step_7_Email(textInputEmail);
						}
					});
				}

			function ChatBot_Step_7_Email(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					return homeBot.action.text(
						{
						delay: 800,
						action: {value: "", placeholder: textInputEmailPlaceHolder}
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.value});

					if (validateEmail(res.value)==true)
						{
						reservationEmail = res.value;
						ChatBot_Step_8_Posting();
						}
						else
						{
						ChatBot_Step_7_Email(textInputEmailRetry);
						}
					});
				}

			function ChatBot_Step_8_Posting()
				{
				reservationEmail = reservationEmail.toLowerCase();
				reservationName = normalizeName(reservationName);

				// SETTING THE PARAMETERS
				var myUrl = "example.php";
				var params = "date=" + encodeURIComponent(reservationDate) + "&days=" + encodeURIComponent(reservationDays) + "&type=" + encodeURIComponent(reservationRoomType) + "&name=" + encodeURIComponent(reservationName) + "&email=" + encodeURIComponent(reservationEmail);

				// VERSION 1 - STANDARD XMLHTTPREQUEST
				/*
				var http = new XMLHttpRequest();
				http.open("GET", myUrl, true);
				http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
				http.timeout = serverTimeout;
				http.onreadystatechange = function()
					{
					if(http.readyState == 4)
						{
						}
					};
				http.onerror = function (){ChatBot_Step_6_Error();};
				http.ontimeout = function (e){ChatBot_Step_6_Error();};
				http.send(params);
				*/

				// VERSION 2 - IMG SRC FOR AVOIDING CORS REQUEST
				/*
				var myImageSubmittter = document.createElement("img");
				myImageSubmittter.onload = function()
					{
					ChatBot_Step_6_Thanks();
					};
				myImageSubmittter.onerror = function()
					{
					ChatBot_Step_6_Error();
					};
				myImageSubmittter.setAttribute("src", myUrl + "?" + params);
				*/

				// FOR DEMO ONLY
				ChatBot_Step_9_Thanks();
				}

			function ChatBot_Step_9_Thanks()
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: textThankYou
					});
				}

			function ChatBot_Step_9_Error()
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: textError
					});
				}

			function ChatBot_Step_10_CheckingReservation(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					return homeBot.action.text(
						{
						delay: 800,
						action: {value: "", placeholder: textInputNamePlaceHolder}
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.value});

					if (res.value.trim()=="")
						{
						ChatBot_Step_10_CheckingReservation(textInputNameRetry);
						}
						else
						{
						var reserved = true;

						if (reserved==true)
							{
							ChatBot_Step_1_Welcome(res.value + textReservationMade);
							}
							else
							{
							ChatBot_Step_1_Welcome(res.value + textNoReservationMade);
							}
						}
					});
				}

			function minimize()
				{
				if (document.getElementById("ChatBot").style.overflowY == "hidden")
					{
					document.getElementById("ChatBot").style.overflowY = "visible"; 
					document.getElementById("ChatBot").style.height = "auto";
					document.getElementById("botui-closeicon").style.display = "block";
					}
					else
					{
					document.getElementById("ChatBot").style.overflowY = "hidden"; 
					document.getElementById("ChatBot").style.height = "30" + "px";
					document.getElementById("botui-closeicon").style.display = "none";
					}
				}

			function validateEmail(email)
				{
				var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
				return re.test(String(email).toLowerCase());
				}

			function normalizeName(str)
				{
				var splitStr = str.toLowerCase().split(' ');
				for (var i = 0; i < splitStr.length; i++)
					{
					splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);
					}
				return splitStr.join(' ');
				}

			window.onload = function()
				{
				ChatBot_Step_1_Welcome(textWelcome);
				};

			/*
			---------------------------
			IMAGE EXAMPLE
			---------------------------
			delay: 1200,
			type: "embed",
			content: "https://giphy.com/embed/v1PSPwbLIrata"

			---------------------------
			URL EXAMPLE
			---------------------------
			delay: 1000,
			content: "!(book) [Read the docs](https:///docs.botui.org), see [examples](https:///examples.botui.org) or explore the code on !(github) [GitHub](https://github.com/moinism/botui)"
			*/

		</script>
	</body>
</html>