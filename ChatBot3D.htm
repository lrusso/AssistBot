<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<title>ChatBot3D | Demo</title>
		<style>
			body{padding:0;margin:0;background-color:white;}
			canvas{float:left;border:0;padding:0;margin:0;display:block}
		</style>
		<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
		<link rel="stylesheet" href="ChatBot3D.css" type="text/css">
	</head>
	<body>
		<canvas id="threeCanvas" width="400" height="100"></canvas>
		<div class="botui-app-container" id="ChatBot">
			<div class="botui-scroller" id="botui-scroller">
				<bot-ui></bot-ui>
			</div>
		</div>

		<script src="ChatBot3D.three.min.js"></script>
		<script src="ChatBot3D.sea3d.min.js"></script>
		<script src="ChatBot3D.js"></script>
		<script src="ChatBot.min.js"></script>
		<script>

			var homeBot = BotUI("ChatBot");

			var userLanguage = window.navigator.userLanguage || window.navigator.language;

			var textTitle = "";
			var textWelcome = "";
			var textInputName = "";
			var textInputNameRetry = "";
			var textInputEmail = "";
			var textInputEmailRetry = "";
			var textInputMessage = "";
			var textInputMessageRetry = "";
			var textTypePress = "";
			var textTypeWork = "";
			var textTypeContact = "";
			var textThankYou = "";
			var textError = "";
			var textPlaceHolder = "";
			var textSend = "";

			var contactType = "";
			var contactName = "";
			var contactEmail = "";
			var contactMessage = "";

			if (userLanguage.substring(0,2)=="es")
				{
				textTitle = "Asistente virtual";
				textWelcome = "Hola, soy la asistente virtual de este sitio Web. &iquest;Cu&aacute;l es el motivo de su visita?";
				textInputName = "&iquest;Cu&aacute;l es su nombre?";
				textInputNameRetry = "Por favor, ingrese un nombre v&aacute;lido.";
				textInputEmail = "&iquest;Cu&aacute;l es su correo?";
				textInputEmailRetry = "Por favor, ingrese un correo v&aacute;lido.";
				textInputMessage = "&iquest;Cu&aacute;l es su mensaje?";
				textInputMessageRetry = "Por favor, ingrese un mensaje v&aacute;lido.";
				textTypePress = "Prensa";
				textTypeWork = "Trabajo";
				textTypeContact = "Consulta";
				textThankYou = "Su mensaje ha sido entregado, muchas gracias. &iquest;Lo puedo ayudar con otro tema?";
				textError = "Error al enviar el mensaje, por favor vuelva a intentarlo en otro momento. &iquest;Lo puedo ayudar con otro tema?";
				textPlaceHolder = "Escriba un mensaje";
				textSend = "Enviar";
				}
				else
				{
				textTitle = "Virtual assistant";
				textWelcome = "Hello, I'm the virtual assistant of this Website. What is the reason of your visit?";
				textInputName = "What is your name?";
				textInputNameRetry = "Please, input a valid name.";
				textInputEmail = "What is your email?";
				textInputEmailRetry = "Please, input a valid email.";
				textInputMessage = "What is your message?";
				textInputMessageRetry = "Please, input a valid message";
				textTypePress = "Press";
				textTypeWork = "Work";
				textTypeContact = "Contact";
				textThankYou = "Your message has been delivered, thank you. Can I help you with another subject?";
				textError = "Error while sending message, please try again later. Can I help you with another subject?";
				textPlaceHolder = "Write a message";
				textSend = "Send";
				}

			function ChatBot_Step_1_Welcome(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					speak(onlyText(a));
					return homeBot.action.button(
						{
						delay: 1000,
						action: [
									{text: textTypePress, value: "press"},
									{text: textTypeWork, value: "work"},
									{text: textTypeContact, value: "contact"}
								]
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.text});

					contactType = res.value;

					ChatBot_Step_2_Name(textInputName);
					});
				}

			function ChatBot_Step_2_Name(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					speak(onlyText(a));
					return homeBot.action.text(
						{
						delay: 800,
						action: {value: "", placeholder: textPlaceHolder, button: {label: textSend}},
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.value});

					if (res.value.trim()=="")
						{
						ChatBot_Step_2_Name(textInputNameRetry);
						}
						else
						{
						contactName = res.value;
						ChatBot_Step_3_Email(textInputEmail);
						}
					});
				}

			function ChatBot_Step_3_Email(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					speak(onlyText(a));
					return homeBot.action.text(
						{
						delay: 800,
						action: {value: "", placeholder: textPlaceHolder, button: {label: textSend}},
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.value});

					if (validateEmail(res.value)==true)
						{
						contactEmail = res.value;
						ChatBot_Step_4_Message(textInputMessage);
						}
						else
						{
						ChatBot_Step_3_Email(textInputEmailRetry);
						}
					});
				}

			function ChatBot_Step_4_Message(a)
				{
				homeBot.message.add(
					{
					delay: 1200,
					loading: true,
					photo: true,
					content: a
					}).then(function ()
					{
					speak(onlyText(a));
					return homeBot.action.text(
						{
						delay: 800,
						action: {value: "", placeholder: textPlaceHolder, button: {label: textSend}},
						});
					}).then(function (res)
					{
					homeBot.message.add({human: true, photo: true, content: res.value});

					if (res.value.trim()=="")
						{
						ChatBot_Step_4_Message(textInputMessageRetry);
						}
						else
						{
						contactMessage = res.value;
						ChatBot_Step_5_Posting();
						}
					});
				}

			function ChatBot_Step_5_Posting()
				{
				contactEmail = contactEmail.toLowerCase();
				contactName = normalizeName(contactName);

				// SETTING THE PARAMETERS
				var myUrl = "example.php";
				var params = "type=" + encodeURIComponent(contactType) + "&name=" + encodeURIComponent(contactName) + "&email=" + encodeURIComponent(contactEmail) + "&message=" + encodeURIComponent(contactMessage);

				// VERSION 1 - STANDARD XMLHTTPREQUEST
				/*
				var http = new XMLHttpRequest();
				http.open("GET", myUrl, true);
				http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
				http.timeout = serverTimeout;
				http.onreadystatechange = function()
					{
					if(http.readyState == 4)
						{
						}
					};
				http.onerror = function (){ChatBot_Step_6_Error();};
				http.ontimeout = function (e){ChatBot_Step_6_Error();};
				http.send(params);
				*/

				// VERSION 2 - IMG SRC FOR AVOIDING CORS REQUEST
				/*
				var myImageSubmittter = document.createElement("img");
				myImageSubmittter.onload = function()
					{
					ChatBot_Step_6_Thanks();
					};
				myImageSubmittter.onerror = function()
					{
					ChatBot_Step_6_Error();
					};
				myImageSubmittter.setAttribute("src", myUrl + "?" + params);
				*/

				// FOR DEMO ONLY
				ChatBot_Step_6_Thanks();
				}

			function ChatBot_Step_6_Thanks()
				{
				ChatBot_Step_1_Welcome(textThankYou);
				}

			function ChatBot_Step_6_Error()
				{
				ChatBot_Step_1_Welcome(textError);
				}

			function minimize()
				{
				if (document.getElementById("ChatBot").style.overflowY == "hidden")
					{
					document.getElementById("ChatBot").style.overflowY = "visible"; 
					document.getElementById("ChatBot").style.height = "auto";
					document.getElementById("botui-closeicon").style.display = "block";
					}
					else
					{
					document.getElementById("ChatBot").style.overflowY = "hidden"; 
					document.getElementById("ChatBot").style.height = "30" + "px";
					document.getElementById("botui-closeicon").style.display = "none";
					}
				}

			function validateEmail(email)
				{
				var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
				return re.test(String(email).toLowerCase());
				}

			function normalizeName(str)
				{
				var splitStr = str.toLowerCase().split(" ");
				for (var i = 0; i < splitStr.length; i++)
					{
					splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);
					}
				return splitStr.join(" ");
				}

			function onlyText(a)
				{
				var div = document.createElement("div");
				div.innerHTML = a;
				return div.textContent || div.innerText || "";
				}

			/*
			---------------------------
			IMAGE EXAMPLE
			---------------------------
			delay: 1200,
			type: "embed",
			content: "https://giphy.com/embed/v1PSPwbLIrata"

			---------------------------
			URL EXAMPLE
			---------------------------
			delay: 1000,
			content: "!(book) [Read the docs](https:///docs.botui.org), see [examples](https:///examples.botui.org) or explore the code on !(github) [GitHub](https://github.com/moinism/botui)"
			*/

		</script>
	</body>
</html>